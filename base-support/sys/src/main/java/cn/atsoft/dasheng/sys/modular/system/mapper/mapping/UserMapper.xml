<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.atsoft.dasheng.sys.modular.system.mapper.UserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.atsoft.dasheng.sys.modular.system.entity.User">
        <id column="user_id" property="userId"/>
        <result column="avatar" property="avatar"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="name" property="name"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="role_id" property="roleId"/>
        <result column="dept_id" property="deptId"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="create_user" property="createUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="version" property="version"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        user_id
        AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", name AS "name", birthday AS "birthday", sex AS "sex", email AS "email", phone AS "phone", role_id AS "roleId", dept_id AS "deptId", status AS "status", create_time AS "createTime", create_user AS "createUser", update_time AS "updateTime", update_user AS "updateUser", version AS "version"
    </sql>

    <sql id="Base_Column_List_With_Pwd">
        user_id
        AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", password AS "password", name AS "name", birthday AS "birthday", sex AS "sex", email AS "email", phone AS "phone", role_id AS "roleId", dept_id AS "deptId", status AS "status", create_time AS "createTime", create_user AS "createUser", update_time AS "updateTime", update_user AS "updateUser", version AS "version"
    </sql>

    <select id="selectUsers" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like CONCAT('%',#{name},'%')
            or account like CONCAT('%',#{name},'%')
            or name like CONCAT('%',#{name},'%'))
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like CONCAT('%$[',
            #{deptId}, '$]%') escape '$' ))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>

    <select id="selectUsers" resultType="map" databaseId="sqlserver">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like CONCAT('%',#{name},'%')
            or account like CONCAT('%',#{name},'%')
            or name like CONCAT('%',#{name},'%'))
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like CONCAT('%$[',
            #{deptId}, '$]%') escape '$' ))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>

    <select id="selectUsers" resultType="map" databaseId="pgsql">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%' || #{name} || '%'
            or account like '%' || #{name} || '%'
            or name like '%' || #{name} || '%')
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like '%[' || #{deptId} ||
            ']%'))
        </if>
        <if test="beginTime != null and beginTime != ''">
            and create_time &gt;= to_timestamp(#{beginTime}||' 00:00:00','yyyy-mm-dd hh24:mi:ss')
        </if>
        <if test="endTime != null and endTime != ''">
            and create_time &lt;= to_timestamp(#{endTime}||' 23:59:59','yyyy-mm-dd hh24:mi:ss')
        </if>
    </select>

    <select id="selectUsers" resultType="map" databaseId="oracle">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%' || #{name} || '%'
            or account like '%' || #{name} || '%'
            or name like '%' || #{name} || '%')
        </if>
        <if test="deptId != null and deptId != 0">
            and (dept_id = #{deptId} or dept_id in ( select dept_id from sys_dept where pids like '%[' || #{deptId} ||
            ']%'))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and create_time &gt;= to_date(#{beginTime}||'00:00:00','yyyy-mm-dd hh24:mi:ss')
            and create_time &lt;= to_date(#{endTime}||'23:59:59','yyyy-mm-dd hh24:mi:ss')
        </if>
    </select>

    <select id="selectUsersByRole" resultType="map">
        select
        user_id AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", u.name AS "name", birthday AS
        "birthday"
        , sex AS "sex", email AS "email", phone AS "phone", u.role_id AS "roleId", dept_id AS "deptId", u.status AS
        "status"
        , u.create_time AS "createTime", u.create_user AS "createUser", u.update_time AS "updateTime", u.update_user AS
        "updateUser", u.version AS "version"
        from sys_user u
        where u.status != 'DELETED'
        <if test="name != null and name != ''">
            and (u.phone like CONCAT('%',#{name},'%')
            or u.account like CONCAT('%',#{name},'%')
            or u.name like CONCAT('%',#{name},'%'))
        </if>
        <if test="roleId != null and roleId != 0">
            and u.role_id like CONCAT('%',#{roleId},'%')
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (u.create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>

    <select id="selectUsersByRole" resultType="map" databaseId="sqlserver">
        select
        user_id AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", u.name AS "name", birthday AS
        "birthday"
        , sex AS "sex", email AS "email", phone AS "phone", u.role_id AS "roleId", dept_id AS "deptId", u.status AS
        "status"
        , u.create_time AS "createTime", u.create_user AS "createUser", u.update_time AS "updateTime", u.update_user AS
        "updateUser", u.version AS "version"
        from sys_user u
        where u.status != 'DELETED'
        <if test="name != null and name != ''">
            and (u.phone like CONCAT('%',#{name},'%')
            or u.account like CONCAT('%',#{name},'%')
            or u.name like CONCAT('%',#{name},'%'))
        </if>
        <if test="roleId != null and roleId != 0">
            and u.role_id like CONCAT('%',#{roleId},'%')
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (u.create_time between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>

    <select id="selectUsersByRole" resultType="map" databaseId="pgsql">
        select
        user_id AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", u.name AS "name", birthday AS
        "birthday"
        , sex AS "sex", email AS "email", phone AS "phone", u.role_id AS "roleId", dept_id AS "deptId", u.status AS
        "status"
        , u.create_time AS "createTime", u.create_user AS "createUser", u.update_time AS "updateTime", u.update_user AS
        "updateUser", u.version AS "version"
        from sys_user u
        where u.status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%' || #{name} || '%'
            or account like '%' || #{name} || '%'
            or name like '%' || #{name} || '%')
        </if>
        <if test="roleId != null and roleId != 0">
            and u.role_id like '%' || #{roleId} || '%'
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and
            (
            u.create_time &gt;= to_timestamp(#{beginTime}||' 00:00:00','yyyy-mm-dd hh24:mi:ss')
            and u.create_time &lt;= to_timestamp(#{endTime}||' 23:59:59','yyyy-mm-dd hh24:mi:ss')
            )
        </if>
    </select>

    <select id="selectUsersByRole" resultType="map" databaseId="oracle">
        select
        user_id AS "userId", avatar AS "avatar", account AS "account", salt AS "salt", u.name AS "name", birthday AS
        "birthday"
        , sex AS "sex", email AS "email", phone AS "phone", u.role_id AS "roleId", dept_id AS "deptId", u.status AS
        "status"
        , u.create_time AS "createTime", u.create_user AS "createUser", u.update_time AS "updateTime", u.update_user AS
        "updateUser", u.version AS "version"
        from sys_user u
        where u.status != 'DELETED'
        <if test="name != null and name != ''">
            and (phone like '%' || #{name} || '%'
            or account like '%' || #{name} || '%'
            or name like '%' || #{name} || '%')
        </if>
        <if test="roleId != null and roleId != 0">
            and u.role_id like '%' || #{roleId} || '%'
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and
            (
            u.create_time &gt;= to_date(#{beginTime}||' 00:00:00','yyyy-mm-dd hh24:mi:ss')
            and u.create_time &lt;= to_date(#{endTime}||' 23:59:59','yyyy-mm-dd hh24:mi:ss')
            )
        </if>
    </select>

    <update id="setStatus">
        update sys_user
        set status = #{status}
        where user_id = #{userId}
    </update>

    <update id="changePwd">
        update sys_user
        set password = #{pwd}
        where user_id = #{userId}
    </update>

    <update id="setRoles">
        update sys_user
        set role_id = #{roleIds}
        where user_id =
              #{userId}
    </update>

    <select id="getByAccount" resultType="cn.atsoft.dasheng.sys.modular.system.entity.User">
        select
        <include refid="Base_Column_List_With_Pwd"/>
        from sys_user where account = #{account} and status != 'DELETED'
    </select>

    <select id="listUserAndRoleExpectAdmin" resultType="map">
        select user.account     as account,
               user.name        as name,
               dept.simple_name as simpleName
        from sys_user user
        left join sys_dept dept
        on user.dept_id = dept.dept_id
    </select>

    <select id="listUserAndRoleExpectAdmin" resultType="map" databaseId="pgsql">
        select user.account     as account,
               user.name        as name,
               dept.simple_name as simpleName
        from sys_user user
        left join sys_dept dept
        on user.dept_id = dept.dept_id
    </select>

    <select id="listUserAndRoleExpectAdmin" resultType="map" databaseId="sqlserver">
        select user.account     as account,
               user.name        as name,
               dept.simple_name as simpleName
        from sys_user user
        left join sys_dept dept
        on user.dept_id = dept.dept_id
    </select>

    <select id="listUserAndRoleExpectAdmin" resultType="map" databaseId="oracle">
        select u.account        as account,
               u.name           as name,
               dept.simple_name as simpleName
        from sys_user u
                 left join sys_dept dept on u.dept_id = dept.dept_id
    </select>

    <!--    <select id="listUserByPositionAndDept" resultType="cn.atsoft.dasheng.sys.modular.system.entity.User">-->
    <!--        select sys_user.user_id,sys_user.name,sys_user.dept_id , sys_user_pos.pos_id-->
    <!--        from sys_user left join sys_user_pos-->
    <!--        on sys_user.user_id = sys_user_pos.user_id-->
    <!--        where status = 'ENABLE'-->
    <!--        <if test="position!=null and position.size()>0">-->
    <!--          and sys_user.dept_id = #{position.key}-->
    <!--            and sys_user_pos.pos_id in-->
    <!--            <foreach item="i" index="index" collection="position.positions" open="(" separator="," close=")">-->
    <!--                #{i}-->
    <!--            </foreach>-->
    <!--        </if>-->
    <!--    </select>-->
    <select id="listUserByPositionAndDept" resultType="cn.atsoft.dasheng.sys.modular.system.entity.User">
        select sys_user.user_id,sys_user.name,sys_user.dept_id , sys_user_pos.pos_id
        from sys_user left join sys_user_pos
        on sys_user.user_id = sys_user_pos.user_id
        where status = 'ENABLE'
        <if test="deptId!=null and positionIds.size()>0">
            and sys_user.dept_id = #{deptId}
            and sys_user_pos.pos_id in
            <foreach item="i" index="index" collection="positionIds" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
    </select>
    <select id="listUserByIds" resultType="cn.atsoft.dasheng.sys.modular.system.model.result.UserResult">
        SELECT
        users.user_id AS "userId",
        userInfo.avatar AS "avatar",
        users.`name` AS "name",
        users.`role_id` AS "roleId",
        users.`dept_id` AS "deptId",
        users.`job_no` AS "jobNo",
        users.`email` AS "email",
        users.`phone` AS "phone",
        users.`account` AS "account",
        users.`password` AS "password",
        users.`salt` AS "salt",
        users.`birthday` AS "birthday",
        users.`sex` AS "sex",
        users.`status` AS "status",
        users.`create_time` AS "createTime",
        users.`create_user` AS "createUser",
        users.`update_time` AS "updateTime",
        users.`update_user` AS "updateUser",
        users.`version` AS "version"
        FROM
        sys_user users
        LEFT JOIN (
        SELECT
        a.*
        FROM
        daoxin_portal_wxuser_info a,(
        SELECT
        user_id,
        max( create_time ) AS create_time
        FROM
        daoxin_portal_wxuser_info
        GROUP BY
        user_id
        ) AS b
        WHERE
        a.user_id = b.user_id
        AND a.create_time = b.create_time
        AND a.source = 'wxCp'
        GROUP BY
        a.user_id
        ) AS wxuserInfo ON users.user_id = wxuserInfo.user_id
        LEFT JOIN uc_open_user_info userInfo ON userInfo.member_id = wxuserInfo.member_id
        AND userInfo.source = "WxCp"
        WHERE
        1 = 1
        <if test=" userIds!=null and userIds.size()>0">
            AND users.user_id IN
            <foreach item="i" index="index" collection="userIds" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>



    </select>


    <select id="userResultPageList"  resultType="cn.atsoft.dasheng.sys.modular.system.model.result.UserResult"
            parameterType="cn.atsoft.dasheng.sys.modular.system.model.params.UserParam">
        SELECT
        users.user_id AS "userId",
        userInfo.avatar AS "avatar",
        userInfo.uuid AS "openId",
        users.`name` AS "name",
        users.`role_id` AS "roleId",
        users.`dept_id` AS "deptId",
        users.`job_no` AS "jobNo",
        users.`email` AS "email",
        users.`phone` AS "phone",
        users.`account` AS "account",
        users.`password` AS "password",
        users.`salt` AS "salt",
        users.`birthday` AS "birthday",
        users.`sex` AS "sex",
        users.`status` AS "status",
        users.`create_time` AS "createTime",
        users.`create_user` AS "createUser",
        users.`update_time` AS "updateTime",
        users.`update_user` AS "updateUser",
        users.`version` AS "version"
        FROM
        sys_user users
        LEFT JOIN (
        SELECT
        a.*
        FROM
        daoxin_portal_wxuser_info a,(
        SELECT
        user_id,
        max( create_time ) AS create_time
        FROM
        daoxin_portal_wxuser_info
        GROUP BY
        user_id
        ) AS b
        WHERE
        a.user_id = b.user_id
        AND a.create_time = b.create_time
        AND a.source = 'wxCp'
        GROUP BY
        a.user_id
        ) AS wxuserInfo ON users.user_id = wxuserInfo.user_id
        LEFT JOIN uc_open_user_info userInfo ON userInfo.member_id = wxuserInfo.member_id
        AND userInfo.source = "WxCp"
        WHERE
        1 = 1
        and users.status = 'ENABLE'
        <if test="paramCondition.userName!=null and paramCondition.userName!= ''">
            and users.name like CONCAT('%',#{paramCondition.userName},'%')
        </if>
        <if test="paramCondition.userId!=null and paramCondition.userId!= ''">
            and users.user_id = #{paramCondition.userName}
        </if>
    </select>
    <select id="userResultList"  resultType="cn.atsoft.dasheng.sys.modular.system.model.result.UserResult"
            parameterType="cn.atsoft.dasheng.sys.modular.system.model.params.UserParam">
        SELECT
        users.user_id AS "userId",
        userInfo.avatar AS "avatar",
        users.`name` AS "name",
        users.`role_id` AS "roleId",
        users.`dept_id` AS "deptId",
        users.`job_no` AS "jobNo",
        users.`email` AS "email",
        users.`phone` AS "phone",
        users.`account` AS "account",
        users.`password` AS "password",
        users.`salt` AS "salt",
        users.`birthday` AS "birthday",
        users.`sex` AS "sex",
        users.`status` AS "status",
        users.`create_time` AS "createTime",
        users.`create_user` AS "createUser",
        users.`update_time` AS "updateTime",
        users.`update_user` AS "updateUser",
        users.`version` AS "version"
        FROM
        sys_user users
        LEFT JOIN (
        SELECT
        a.*
        FROM
        daoxin_portal_wxuser_info a,(
        SELECT
        user_id,
        max( create_time ) AS create_time
        FROM
        daoxin_portal_wxuser_info
        GROUP BY
        user_id
        ) AS b
        WHERE
        a.user_id = b.user_id
        AND a.create_time = b.create_time
        GROUP BY
        a.user_id
        ) AS wxuserInfo ON users.user_id = wxuserInfo.user_id
        LEFT JOIN uc_open_user_info userInfo ON userInfo.member_id = wxuserInfo.member_id
        AND userInfo.display = 1
        WHERE
        1 = 1
        and users.status = 'ENABLE'

        <if test="paramCondition.userName!=null and paramCondition.userName!= ''">
            and users.name like CONCAT('%',#{paramCondition.userName},'%')
        </if>
        <if test="paramCondition.userId!=null and paramCondition.userId!= ''">
            and users.user_id = #{paramCondition.userName}
        </if>
          <if test="paramCondition.deptId!=null">
            and users.dept_id = #{paramCondition.deptId}
        </if>
        <if test="paramCondition.userIds!=null and paramCondition.userId.size >0">
            and user_id in
            <foreach collection="paramCondition.userIds" index="index" item="userId" separator="," open="(" close=")" >
                #{userId}
            </foreach>
        </if>
    </select>
    <select id="getUserOpenId"  resultType="String"
            parameterType="Long">
        SELECT uuid from uc_open_user_info WHERE member_id = ( SELECT member_id FROM `daoxin_portal_wxuser_info` WHERE user_id = #{userId} and  display = 1 ) and source  = 'wxCp'
    </select>


</mapper>
